{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Ionicons } from '@expo/vector-icons';\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport UserScreen from \"./src/screens/UserScreen\";\nimport SettingScreen from \"./src/screens/SettingScreen\";\nimport CategoriesScreen from \"./src/screens/CategoriesScreen\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport SearchScreen from \"./src/screens/SearchScreen\";\nimport AddAdvert from \"./src/screens/AddAdvert\";\nimport AdvertDetails from \"./src/screens/AdvertDetails\";\nimport CategoryDetails from \"./src/screens/CategoryDetails\";\nimport EditProfile from \"./src/screens/EditProfile\";\nimport MessageDetails from \"./src/screens/MessageDetails\";\nimport MessageList from \"./src/screens/MessageList\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeStack = createNativeStackNavigator();\n\nfunction HomeStackScreen() {\n  return _jsxs(HomeStack.Navigator, {\n    children: [_jsx(HomeStack.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(HomeStack.Screen, {\n      name: \"LoginPage\",\n      component: LoginScreen\n    }), _jsx(HomeStack.Screen, {\n      name: \"search\",\n      component: SearchScreen\n    }), _jsx(CategoriesStack.Screen, {\n      name: \"Category_details\",\n      component: CategoryDetails\n    }), _jsx(CategoriesStack.Screen, {\n      name: \"Advert_details\",\n      component: AdvertDetails\n    })]\n  });\n}\n\nvar CategoriesStack = createNativeStackNavigator();\n\nfunction CategoriesStackScreen() {\n  return _jsxs(CategoriesStack.Navigator, {\n    children: [_jsx(CategoriesStack.Screen, {\n      name: \"Categories\",\n      component: CategoriesScreen\n    }), _jsx(CategoriesStack.Screen, {\n      name: \"Category_details\",\n      component: CategoryDetails\n    }), _jsx(CategoriesStack.Screen, {\n      name: \"Advert_details\",\n      component: AdvertDetails\n    })]\n  });\n}\n\nvar AccountStack = createNativeStackNavigator();\n\nfunction AccountStackScreen() {\n  return _jsxs(AccountStack.Navigator, {\n    children: [_jsx(AccountStack.Screen, {\n      name: \"Account\",\n      component: UserScreen\n    }), _jsx(AccountStack.Screen, {\n      name: \"Edit_profile\",\n      component: EditProfile\n    }), _jsx(AccountStack.Screen, {\n      name: \"Add_advert\",\n      component: AddAdvert\n    }), _jsx(AccountStack.Screen, {\n      name: \"Advert_details\",\n      component: AdvertDetails\n    }), _jsx(AccountStack.Screen, {\n      name: \"Messages_list\",\n      component: MessageList\n    }), _jsx(AccountStack.Screen, {\n      name: \"Message_details\",\n      component: MessageDetails\n    })]\n  });\n}\n\nvar SettingsStack = createNativeStackNavigator();\n\nfunction SettingsStackScreen() {\n  return _jsx(SettingsStack.Navigator, {\n    children: _jsx(SettingsStack.Screen, {\n      name: \"Settings\",\n      component: SettingScreen\n    })\n  });\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: {\n        headerShown: false,\n        tabBarShowLabel: true,\n        tabBarActiveTintColor: '#d93232',\n        tabBarStyle: {\n          height: 50,\n          paddingHorizontal: 2,\n          paddingTop: 0,\n          position: 'absolute',\n          borderTopWidth: 0,\n          backgroundColor: '#eaebef'\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStackScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(tabInfo) {\n            return _jsx(Ionicons, {\n              name: \"home\",\n              size: 20,\n              color: tabInfo.focused ? \"#d93232\" : \"#8e8e93\"\n            });\n          },\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Categories\",\n        component: CategoriesStackScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(tabInfo) {\n            return _jsx(Ionicons, {\n              name: \"list\",\n              size: 20,\n              color: tabInfo.focused ? \"#cf1818\" : \"#8e8e93\"\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Account\",\n        component: AccountStackScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(tabInfo) {\n            return _jsx(Ionicons, {\n              name: \"person\",\n              size: 20,\n              color: tabInfo.focused ? \"#cf1818\" : \"#8e8e93\"\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Settings\",\n        component: SettingsStackScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(tabInfo) {\n            return _jsx(Ionicons, {\n              name: \"settings\",\n              size: 20,\n              color: tabInfo.focused ? \"#cf1818\" : \"#8e8e93\"\n            });\n          }\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/jengo/App.js"],"names":["StatusBar","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","createDrawerNavigator","Ionicons","HomeScreen","UserScreen","SettingScreen","CategoriesScreen","LoginScreen","SearchScreen","AddAdvert","AdvertDetails","CategoryDetails","EditProfile","MessageDetails","MessageList","React","HomeStack","HomeStackScreen","headerShown","CategoriesStack","CategoriesStackScreen","AccountStack","AccountStackScreen","SettingsStack","SettingsStackScreen","Tab","App","tabBarShowLabel","tabBarActiveTintColor","tabBarStyle","height","paddingHorizontal","paddingTop","position","borderTopWidth","backgroundColor","tabBarIcon","tabInfo","focused","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAAQC,qBAAR,QAAoC,0BAApC;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AAEA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,WAAP;AAEA,OAAOC,YAAP;AAEA,OAAOC,SAAP;AACA,OAAOC,aAAP;AACA,OAAOC,eAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAIA,IAAMC,SAAS,GAACjB,0BAA0B,EAA1C;;AACA,SAASkB,eAAT,GACA;AACE,SACE,MAAC,SAAD,CAAW,SAAX;AAAA,eACG,KAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,MAAvB;AAA8B,MAAA,SAAS,EAAEd,UAAzC;AAAsD,MAAA,OAAO,EAAE;AAACe,QAAAA,WAAW,EAAC;AAAb;AAA/D,MADH,EAEG,KAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,WAAvB;AAAmC,MAAA,SAAS,EAAEX;AAA9C,MAFH,EAGG,KAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,QAAvB;AAAgC,MAAA,SAAS,EAAEC;AAA3C,MAHH,EAIG,KAAC,eAAD,CAAiB,MAAjB;AAAwB,MAAA,IAAI,EAAC,kBAA7B;AAAgD,MAAA,SAAS,EAAEG;AAA3D,MAJH,EAKE,KAAC,eAAD,CAAiB,MAAjB;AAAwB,MAAA,IAAI,EAAC,gBAA7B;AAA8C,MAAA,SAAS,EAAED;AAAzD,MALF;AAAA,IADF;AASD;;AAED,IAAMS,eAAe,GAACpB,0BAA0B,EAAhD;;AAEA,SAASqB,qBAAT,GACA;AACE,SACE,MAAC,eAAD,CAAiB,SAAjB;AAAA,eACE,KAAC,eAAD,CAAiB,MAAjB;AAAwB,MAAA,IAAI,EAAC,YAA7B;AAA0C,MAAA,SAAS,EAAEd;AAArD,MADF,EAEE,KAAC,eAAD,CAAiB,MAAjB;AAAwB,MAAA,IAAI,EAAC,kBAA7B;AAAgD,MAAA,SAAS,EAAEK;AAA3D,MAFF,EAGE,KAAC,eAAD,CAAiB,MAAjB;AAAwB,MAAA,IAAI,EAAC,gBAA7B;AAA8C,MAAA,SAAS,EAAED;AAAzD,MAHF;AAAA,IADF;AAOD;;AAED,IAAMW,YAAY,GAACtB,0BAA0B,EAA7C;;AAEA,SAASuB,kBAAT,GACA;AACE,SACE,MAAC,YAAD,CAAc,SAAd;AAAA,eACE,KAAC,YAAD,CAAc,MAAd;AAAqB,MAAA,IAAI,EAAC,SAA1B;AAAoC,MAAA,SAAS,EAAElB;AAA/C,MADF,EAEE,KAAC,YAAD,CAAc,MAAd;AAAqB,MAAA,IAAI,EAAC,cAA1B;AAAyC,MAAA,SAAS,EAAEQ;AAApD,MAFF,EAGE,KAAC,YAAD,CAAc,MAAd;AAAqB,MAAA,IAAI,EAAC,YAA1B;AAAuC,MAAA,SAAS,EAAEH;AAAlD,MAHF,EAIE,KAAC,YAAD,CAAc,MAAd;AAAqB,MAAA,IAAI,EAAC,gBAA1B;AAA2C,MAAA,SAAS,EAAEC;AAAtD,MAJF,EAKE,KAAC,YAAD,CAAc,MAAd;AAAqB,MAAA,IAAI,EAAC,eAA1B;AAA0C,MAAA,SAAS,EAAEI;AAArD,MALF,EAME,KAAC,YAAD,CAAc,MAAd;AAAqB,MAAA,IAAI,EAAC,iBAA1B;AAA4C,MAAA,SAAS,EAAED;AAAvD,MANF;AAAA,IADF;AAUD;;AAED,IAAMU,aAAa,GAACxB,0BAA0B,EAA9C;;AAEA,SAASyB,mBAAT,GACA;AACE,SACG,KAAC,aAAD,CAAe,SAAf;AAAA,cACE,KAAC,aAAD,CAAe,MAAf;AAAsB,MAAA,IAAI,EAAC,UAA3B;AAAsC,MAAA,SAAS,EAAEnB;AAAjD;AADF,IADH;AAKD;;AAED,IAAMoB,GAAG,GAAGzB,wBAAwB,EAApC;AACA,eAAe,SAAS0B,GAAT,GAAe;AAC5B,SACE,KAAC,mBAAD;AAAA,cACE,MAAC,GAAD,CAAK,SAAL;AACA,MAAA,aAAa,EACX;AACER,QAAAA,WAAW,EAAC,KADd;AAEES,QAAAA,eAAe,EAAC,IAFlB;AAGEC,QAAAA,qBAAqB,EAAE,SAHzB;AAIEC,QAAAA,WAAW,EACX;AACAC,UAAAA,MAAM,EAAE,EADR;AAEAC,UAAAA,iBAAiB,EAAE,CAFnB;AAGAC,UAAAA,UAAU,EAAE,CAHZ;AAKAC,UAAAA,QAAQ,EAAE,UALV;AAMAC,UAAAA,cAAc,EAAE,CANhB;AAOAC,UAAAA,eAAe,EAAE;AAPjB;AALF,OAFF;AAAA,iBAmBE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAElB,eAAnC;AAAoD,QAAA,OAAO,EAAE;AACxDmB,UAAAA,UAAU,EAAE,oBAACC,OAAD,EAAa;AACxB,mBACE,KAAC,QAAD;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,IAAI,EAAE,EAFR;AAGE,cAAA,KAAK,EAAEA,OAAO,CAACC,OAAR,GAAkB,SAAlB,GAA8B;AAHvC,cADF;AAOD,WATwD;AAStDpB,UAAAA,WAAW,EAAC;AAT0C;AAA7D,QAnBF,EA8BE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,YAAjB;AAA8B,QAAA,SAAS,EAAEE,qBAAzC;AAAgE,QAAA,OAAO,EAAE;AACpEgB,UAAAA,UAAU,EAAE,oBAACC,OAAD,EAAa;AACxB,mBACE,KAAC,QAAD;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,IAAI,EAAE,EAFR;AAGE,cAAA,KAAK,EAAEA,OAAO,CAACC,OAAR,GAAkB,SAAlB,GAA8B;AAHvC,cADF;AAOD;AAToE;AAAzE,QA9BF,EAyCE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,SAAjB;AAA2B,QAAA,SAAS,EAAEhB,kBAAtC;AAA0D,QAAA,OAAO,EAAE;AAC/Dc,UAAAA,UAAU,EAAE,oBAACC,OAAD,EAAa;AACvB,mBACE,KAAC,QAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,IAAI,EAAE,EAFR;AAGE,cAAA,KAAK,EAAEA,OAAO,CAACC,OAAR,GAAkB,SAAlB,GAA8B;AAHvC,cADF;AAOF;AAT+D;AAAnE,QAzCF,EAoDE,KAAC,GAAD,CAAK,MAAL;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,SAAS,EAAEd,mBAAvC;AAA4D,QAAA,OAAO,EAAE;AAChEY,UAAAA,UAAU,EAAE,oBAACC,OAAD,EAAa;AACxB,mBACE,KAAC,QAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,IAAI,EAAE,EAFR;AAGE,cAAA,KAAK,EAAEA,OAAO,CAACC,OAAR,GAAkB,SAAlB,GAA8B;AAHvC,cADF;AAOD;AATgE;AAArE,QApDF;AAAA;AADF,IADF;AAqED;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETR,IAAAA,eAAe,EAAE,MAFR;AAGTS,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport {NavigationContainer} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport {Ionicons} from '@expo/vector-icons';\n\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport UserScreen from \"./src/screens/UserScreen\";\nimport SettingScreen from \"./src/screens/SettingScreen\";\nimport CategoriesScreen from \"./src/screens/CategoriesScreen\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\n//import PostScreen from \"./src/screens/PostScreen\";\nimport SearchScreen  from \"./src/screens/SearchScreen\";\n\nimport AddAdvert from \"./src/screens/AddAdvert\";\nimport AdvertDetails from \"./src/screens/AdvertDetails\";\nimport CategoryDetails from \"./src/screens/CategoryDetails\";\nimport EditProfile from \"./src/screens/EditProfile\";\nimport MessageDetails from \"./src/screens/MessageDetails\";\nimport MessageList from \"./src/screens/MessageList\";\n\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\n\nconst HomeStack=createNativeStackNavigator();\nfunction HomeStackScreen()\n{\n  return(\n    <HomeStack.Navigator>\n       <HomeStack.Screen name=\"Home\" component={HomeScreen}  options={{headerShown:false}}/>\n       <HomeStack.Screen name=\"LoginPage\" component={LoginScreen} />\n       <HomeStack.Screen name=\"search\" component={SearchScreen}/>\n       <CategoriesStack.Screen name='Category_details' component={CategoryDetails}/>\n      <CategoriesStack.Screen name='Advert_details' component={AdvertDetails}/>\n    </HomeStack.Navigator>\n  );\n}\n\nconst CategoriesStack=createNativeStackNavigator();\n\nfunction CategoriesStackScreen()\n{\n  return(\n    <CategoriesStack.Navigator>\n      <CategoriesStack.Screen name='Categories' component={CategoriesScreen}/>\n      <CategoriesStack.Screen name='Category_details' component={CategoryDetails}/>\n      <CategoriesStack.Screen name='Advert_details' component={AdvertDetails}/>\n    </CategoriesStack.Navigator>\n  );\n}\n\nconst AccountStack=createNativeStackNavigator()\n\nfunction AccountStackScreen()\n{\n  return(\n    <AccountStack.Navigator>\n      <AccountStack.Screen name='Account' component={UserScreen}/>\n      <AccountStack.Screen name='Edit_profile' component={EditProfile}/>\n      <AccountStack.Screen name='Add_advert' component={AddAdvert}/>\n      <AccountStack.Screen name='Advert_details' component={AdvertDetails}/>\n      <AccountStack.Screen name='Messages_list' component={MessageList}/>\n      <AccountStack.Screen name='Message_details' component={MessageDetails}/>\n    </AccountStack.Navigator>\n  );\n}\n\nconst SettingsStack=createNativeStackNavigator();\n\nfunction SettingsStackScreen()\n{\n  return(\n     <SettingsStack.Navigator>\n       <SettingsStack.Screen name='Settings' component={SettingScreen}/>\n     </SettingsStack.Navigator>\n  );\n}\n\nconst Tab = createBottomTabNavigator();\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator \n      screenOptions={\n        {\n          headerShown:false,\n          tabBarShowLabel:true,\n          tabBarActiveTintColor: '#d93232',\n          tabBarStyle: \n          {\n          height: 50,\n          paddingHorizontal: 2,\n          paddingTop: 0,\n         \n          position: 'absolute',\n          borderTopWidth: 0,\n          backgroundColor: '#eaebef',\n         },\n       }\n      }  >\n\n        <Tab.Screen name='Home' component={HomeStackScreen} options={{\n             tabBarIcon: (tabInfo) => {\n              return (\n                <Ionicons\n                  name=\"home\"\n                  size={20}\n                  color={tabInfo.focused ? \"#d93232\" : \"#8e8e93\"}\n                />\n              );\n            }, headerShown:false\n           }} />\n        <Tab.Screen name='Categories' component={CategoriesStackScreen} options={{\n             tabBarIcon: (tabInfo) => {\n              return (\n                <Ionicons\n                  name=\"list\"\n                  size={20}\n                  color={tabInfo.focused ? \"#cf1818\" : \"#8e8e93\"}\n                />\n              );\n            },\n           }}/>\n        <Tab.Screen name='Account' component={AccountStackScreen} options={{\n            tabBarIcon: (tabInfo) => {\n              return (\n                <Ionicons\n                  name=\"person\"\n                  size={20}\n                  color={tabInfo.focused ? \"#cf1818\" : \"#8e8e93\"}\n              />\n            );\n           },\n          }} />\n        <Tab.Screen name='Settings' component={SettingsStackScreen} options={{\n             tabBarIcon: (tabInfo) => {\n              return (\n                <Ionicons\n                  name=\"settings\"\n                  size={20}\n                  color={tabInfo.focused ? \"#cf1818\" : \"#8e8e93\"}\n                />\n              );\n            },\n           }} />\n\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}