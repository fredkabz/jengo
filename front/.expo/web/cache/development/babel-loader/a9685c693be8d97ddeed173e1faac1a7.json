{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ImageProps } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { RollInLeft } from \"react-native-reanimated\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Line from \"./Line\";\nimport LoginScreen from \"./LoginScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar fd = new FormData();\n\nvar PostScreen = function PostScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image_array = _useState4[0],\n      setImageArray = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      description = _useState8[0],\n      setDescription = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isUploading = _useState10[0],\n      setIsUploading = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      category_array = _useState12[0],\n      setCategoryArray = _useState12[1];\n\n  var _useState13 = useState(\"Select Category\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sub_category_name_selected = _useState14[0],\n      setSubCategoryName = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      location = _useState16[0],\n      setLocation = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      price = _useState18[0],\n      setPrice = _useState18[1];\n\n  var user_id = route.params.user_id;\n  var category_id = route.params.category_id;\n  var category_name = route.params.category_name;\n  useEffect(function () {\n    image != null ? setImageArray([].concat(_toConsumableArray(image_array), [image])) : null;\n    fetch(\"https://app.merrytimesacademy.com/jengo/get_categories.php\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        category_id: category_id\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setCategoryArray(responseJson);\n    }).catch(function (error) {\n      Alert(error);\n    });\n  }, [image]);\n\n  var pickImage = function pickImage() {\n    var result, filePath, filename, ext, file_type;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              aspect: [4, 3],\n              quality: 0.3,\n              maxWidth: 225,\n              maxHeight: 225\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              filePath = result.uri;\n              filename = filePath.replace(/^.*[\\\\\\/]/, \"\");\n              ext = filename.split(\".\").pop();\n              file_type = result.type + \"/\" + ext;\n              setImage(result.uri);\n              fd.append(\"file[]\", {\n                uri: result.uri,\n                type: file_type,\n                name: filename\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var img_list = image_array.map(function (image, i) {\n    return _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 50,\n        height: 50\n      }\n    }, i);\n  });\n\n  var upload_post = function upload_post() {\n    setIsUploading(true);\n    fd.append(\"category_id\", category_id);\n    fd.append(\"category_name\", category_name);\n    fd.append(\"user_id\", user_id);\n    fd.append(\"title\", title);\n    fd.append(\"description\", description);\n    fd.append(\"location\", location);\n    fd.append(\"price\", price);\n    fd.append(\"sub_category_name\", sub_category_name_selected);\n    fetch(\"https://app.merrytimesacademy.com/jengo/add_post.php\", {\n      method: \"POST\",\n      body: fd,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setIsUploading(false);\n\n      if (responseJson.msg_type === \"success\") {\n        alert(\"Post Added Successfully\");\n      }\n\n      if (responseJson.msg_type === \"error\") {\n        alert(\"Post addes successfully\");\n      }\n\n      console.log(responseJson);\n      setImageArray([]);\n      setImage(null);\n      alert(\"Post Added Successfully\");\n    }).catch(function (error) {\n      Alert(error);\n    });\n  };\n\n  return _jsx(ScrollView, {\n    nestedScrollEnabled: true,\n    style: {\n      flex: 1\n    },\n    children: isUploading ? _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 150\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#d93232\",\n        animating: true\n      })\n    }) : _jsxs(View, {\n      style: {\n        flex: 1,\n        marginLeft: 15,\n        marginRight: 15,\n        top: 20,\n        bottom: 50,\n        backgroundColor: \"#ffffff\",\n        elevation: 20,\n        borderRadius: 8,\n        shadowColor: \"#52006A\",\n        padding: 5\n      },\n      children: [_jsx(View, {\n        style: {\n          padding: 10,\n          margin: 2\n        },\n        children: _jsx(Ionicons, {\n          name: \"list\",\n          size: 25,\n          color: \"#6F9E4C\",\n          children: _jsxs(Text, {\n            style: {\n              fontSize: 20,\n              fontWeight: \"bold\",\n              padding: 10,\n              color: \"#6F9E4C\"\n            },\n            children: [\"Post \", category_name]\n          })\n        })\n      }), _jsx(Line, {}), _jsx(View, {\n        style: [styles.input, {\n          justifyContent: \"center\"\n        }],\n        children: _jsxs(Picker, {\n          selectedValue: sub_category_name_selected,\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            return setSubCategoryName(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: sub_category_name_selected,\n            value: sub_category_name_selected\n          }), category_array.map(function (item) {\n            return _jsx(Picker.Item, {\n              label: item.sub_category_name,\n              value: item.sub_category_name\n            });\n          })]\n        })\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          marginTop: 10\n        },\n        children: [_jsx(TextInput, {\n          placeholder: \"Title*\",\n          style: styles.input,\n          onChangeText: function onChangeText(title) {\n            return setTitle(title);\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"Description*\",\n          style: styles.input,\n          onChangeText: function onChangeText(description) {\n            return setDescription(description);\n          }\n        })]\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          display: \"flex\"\n        },\n        children: [_jsx(View, {\n          style: {\n            height: 75,\n            width: 70,\n            alignItems: \"center\"\n          },\n          children: _jsxs(TouchableOpacity, {\n            style: {\n              padding: 1\n            },\n            onPress: pickImage,\n            children: [_jsx(Ionicons, {\n              style: {\n                alignSelf: \"center\"\n              },\n              name: \"add-circle\",\n              size: 55,\n              color: \"#6F9E4C\"\n            }), _jsx(Text, {\n              style: {\n                fontSize: 12\n              },\n              children: \"Add Image\"\n            })]\n          })\n        }), image_array.length > 0 ? _jsx(ScrollView, {\n          nestedScrollEnabled: true,\n          horizontal: true,\n          contentContainerStyle: {\n            flexDirection: \"row-reverse\"\n          },\n          children: image_array.map(function (image, i) {\n            return _jsx(View, {\n              style: {\n                margin: 5,\n                borderRadius: 5,\n                elevation: 5\n              },\n              children: _jsx(Image, {\n                source: {\n                  uri: image\n                },\n                style: {\n                  width: 70,\n                  height: 70,\n                  borderRadius: 5\n                }\n              }, i)\n            });\n          })\n        }) : null]\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          marginTop: 10\n        },\n        children: [_jsx(TextInput, {\n          placeholder: \"Location*\",\n          style: styles.input,\n          onChangeText: function onChangeText(location) {\n            return setLocation(location);\n          }\n        }), _jsx(TextInput, {\n          placeholder: \"Price*\",\n          style: styles.input,\n          onChangeText: function onChangeText(price) {\n            return setPrice(price);\n          }\n        }), _jsx(TouchableOpacity, {\n          style: {\n            backgroundColor: \"#6F9E4C\",\n            padding: 10,\n            marginTop: 10,\n            marginBottom: 100,\n            alignSelf: \"center\",\n            width: \"70%\",\n            borderRadius: 5\n          },\n          onPress: upload_post,\n          children: _jsx(Text, {\n            style: {\n              color: \"#fff\",\n              alignSelf: \"center\",\n              fontSize: 16\n            },\n            children: \"Upload Post\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default PostScreen;\nvar styles = StyleSheet.create({\n  MainContainer: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n    backgroundColor: \"#fff\"\n  },\n  input: {\n    height: 50,\n    margin: 10,\n    width: \"95%\",\n    padding: 10,\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    color: \"#252222\",\n    fontSize: 15\n  },\n  searchSection: {\n    alignItems: \"flex-end\",\n    width: \"95%\",\n    margin: 10,\n    height: 50,\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    borderBottomColor: \"lightgrey\"\n  },\n  searchIcon: {\n    padding: 10,\n    position: \"absolute\",\n    left: 0,\n    color: \"#a0a1a1\",\n    margin: 10\n  }\n});","map":{"version":3,"sources":["C:/jengo/src/screens/PostScreen.js"],"names":["React","useState","useEffect","ImageProps","Ionicons","NavigationContainer","createNativeStackNavigator","ImagePicker","RollInLeft","TextInput","Line","LoginScreen","fd","FormData","PostScreen","navigation","route","image","setImage","image_array","setImageArray","title","setTitle","description","setDescription","isUploading","setIsUploading","category_array","setCategoryArray","sub_category_name_selected","setSubCategoryName","location","setLocation","price","setPrice","user_id","params","category_id","category_name","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","catch","error","Alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","aspect","quality","maxWidth","maxHeight","result","console","log","cancelled","filePath","uri","filename","replace","ext","split","pop","file_type","type","append","name","img_list","map","i","width","height","upload_post","msg_type","alert","flex","justifyContent","alignItems","marginTop","marginLeft","marginRight","top","bottom","backgroundColor","elevation","borderRadius","shadowColor","padding","margin","fontSize","fontWeight","color","styles","input","itemValue","itemIndex","item","sub_category_name","flexDirection","display","alignSelf","length","marginBottom","StyleSheet","create","MainContainer","StatusBar","currentHeight","borderWidth","borderColor","searchSection","borderBottomWidth","borderBottomColor","searchIcon","position","left"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Button,\r\n  ImageProps,\r\n  TouchableOpacity,\r\n  Image,\r\n  Alert,\r\n  StyleSheet,\r\n  ScrollView,\r\n  StatusBar,\r\n  ActivityIndicator,\r\n  Picker,KeyboardAvoidingView\r\n  \r\n} from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n//import ImagePicker from 'react-native-image-crop-picker';\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { RollInLeft } from \"react-native-reanimated\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Line from \"./Line\";\r\nimport LoginScreen from \"./LoginScreen\";\r\nlet fd = new FormData();\r\n\r\nconst PostScreen = ({ navigation, route }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [image_array, setImageArray] = useState([]);\r\n  const [title, setTitle] = useState(null);\r\n  const [description, setDescription] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [category_array, setCategoryArray] = useState([]);\r\n  const [sub_category_name_selected, setSubCategoryName] =\r\n    useState(\"Select Category\");\r\n  const [location, setLocation] = useState(null);\r\n  const [price, setPrice] = useState(null);\r\n\r\n  const user_id = route.params.user_id;\r\n  const category_id = route.params.category_id;\r\n  const category_name = route.params.category_name;\r\n\r\n  //alert(user_id);\r\n\r\n  useEffect(() => {\r\n    //alert(category_id);\r\n    image != null ? setImageArray([...image_array, image]) : null;\r\n    //alert(category_id)\r\n    fetch(\"https://app.merrytimesacademy.com/jengo/get_categories.php\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        category_id: category_id,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        setCategoryArray(responseJson);\r\n        //console.log(category_array);\r\n      })\r\n      .catch((error) => {\r\n        Alert(error);\r\n      });\r\n  }, [image]);\r\n\r\n  const pickImage = async () => {\r\n    // No permissions request is necessary for launching the image library\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n\r\n      aspect: [4, 3],\r\n      quality: 0.3,\r\n      maxWidth: 225,\r\n      maxHeight: 225,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      const filePath = result.uri;\r\n\r\n      const filename = filePath.replace(/^.*[\\\\\\/]/, \"\");\r\n      const ext = filename.split(\".\").pop();\r\n      const file_type = result.type + \"/\" + ext;\r\n\r\n      setImage(result.uri);\r\n\r\n      fd.append(\"file[]\", {\r\n        uri: result.uri,\r\n        type: file_type,\r\n        name: filename,\r\n      });\r\n      //setImageArray([...image_array,image])\r\n      //alert(image);\r\n      //image_array.push(result.uri);\r\n      //const new_image_array=[...image_array,image];\r\n      //setImageArray(new_image_array);\r\n    }\r\n  };\r\n  const img_list = image_array.map((image, i) => (\r\n    <Image key={i} source={{ uri: image }} style={{ width: 50, height: 50 }} />\r\n  ));\r\n\r\n  const upload_post = () => {\r\n    setIsUploading(true);\r\n    fd.append(\"category_id\", category_id);\r\n    fd.append(\"category_name\", category_name);\r\n    fd.append(\"user_id\", user_id);\r\n    fd.append(\"title\", title);\r\n    fd.append(\"description\", description);\r\n\r\n    fd.append(\"location\", location);\r\n    fd.append(\"price\", price);\r\n    fd.append(\"sub_category_name\", sub_category_name_selected);\r\n\r\n    fetch(\"https://app.merrytimesacademy.com/jengo/add_post.php\", {\r\n      method: \"POST\",\r\n      body: fd,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        //alert(\"Post Successful Added\")\r\n        setIsUploading(false);\r\n        if (responseJson.msg_type === \"success\") {\r\n          alert(\"Post Added Successfully\");\r\n        }\r\n        if (responseJson.msg_type === \"error\") {\r\n          alert(\"Post addes successfully\");\r\n        }\r\n        console.log(responseJson);\r\n        setImageArray([]);\r\n        setImage(null);\r\n        \r\n        alert(\"Post Added Successfully\");\r\n      })\r\n      .catch((error) => {\r\n        Alert(error);\r\n      });\r\n  };\r\n\r\n  /*displayItems = ({ item }) => {\r\n    return (\r\n      <Picker.Item\r\n        label={item.sub_category_name}\r\n        value={item.sub_category_name}\r\n      />\r\n    );\r\n  };*/\r\n\r\n  return (\r\n  \r\n    <ScrollView nestedScrollEnabled={true} style={{flex:1}}>\r\n      {isUploading ? (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop:150,\r\n          }}\r\n        >\r\n          <ActivityIndicator size=\"large\" color=\"#d93232\" animating />\r\n        </View>\r\n      ) : (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            marginLeft: 15,\r\n            marginRight: 15,\r\n            top: 20,\r\n            bottom: 50,\r\n            backgroundColor: \"#ffffff\",\r\n            elevation: 20,\r\n            borderRadius: 8,\r\n            shadowColor: \"#52006A\",\r\n            padding: 5,\r\n          }}\r\n        >\r\n          <View style={{ padding: 10, margin: 2 }}>\r\n            <Ionicons name=\"list\" size={25} color=\"#6F9E4C\">\r\n              <Text\r\n                style={{\r\n                  fontSize: 20,\r\n                  fontWeight: \"bold\",\r\n                  padding: 10,\r\n                  color: \"#6F9E4C\",\r\n                }}\r\n              >\r\n                Post {category_name}\r\n              </Text>\r\n            </Ionicons>\r\n          </View>\r\n\r\n          <Line />\r\n\r\n          <View style={[styles.input, { justifyContent: \"center\" }]}>\r\n            <Picker\r\n              selectedValue={sub_category_name_selected}\r\n              onValueChange={(itemValue, itemIndex) =>\r\n                setSubCategoryName(itemValue)\r\n              }\r\n            >\r\n              <Picker.Item\r\n                label={sub_category_name_selected}\r\n                value={sub_category_name_selected}\r\n              />\r\n              {category_array.map((item) => {\r\n                return (\r\n                  <Picker.Item\r\n                    label={item.sub_category_name}\r\n                    value={item.sub_category_name}\r\n                  />\r\n                );\r\n              })}\r\n            </Picker>\r\n          </View>\r\n\r\n          <View style={{ flex: 1, marginTop: 10 }}>\r\n            <TextInput\r\n              placeholder=\"Title*\"\r\n              style={styles.input}\r\n              onChangeText={(title) => setTitle(title)}\r\n            />\r\n\r\n            <TextInput\r\n              placeholder=\"Description*\"\r\n              style={styles.input}\r\n              onChangeText={(description) => setDescription(description)}\r\n            />\r\n          </View>\r\n\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-start\",\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <View style={{ height: 75, width: 70, alignItems: \"center\" }}>\r\n              <TouchableOpacity style={{ padding: 1 }} onPress={pickImage}>\r\n                <Ionicons\r\n                  style={{ alignSelf: \"center\" }}\r\n                  name=\"add-circle\"\r\n                  size={55}\r\n                  color=\"#6F9E4C\"\r\n                />\r\n                <Text style={{ fontSize: 12 }}>Add Image</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            {image_array.length > 0 ? (\r\n              <ScrollView\r\n                nestedScrollEnabled={true}\r\n                horizontal\r\n                contentContainerStyle={{ flexDirection: \"row-reverse\" }}\r\n              >\r\n                {image_array.map((image, i) => (\r\n                  <View style={{ margin: 5, borderRadius: 5, elevation: 5 }}>\r\n                    <Image\r\n                      key={i}\r\n                      source={{ uri: image }}\r\n                      style={{ width: 70, height: 70, borderRadius: 5 }}\r\n                    />\r\n                  </View>\r\n                ))}\r\n              </ScrollView>\r\n            ) : null}\r\n          </View>\r\n\r\n          <View style={{ flex: 1, marginTop: 10 }}>\r\n            <TextInput\r\n              placeholder=\"Location*\"\r\n              style={styles.input}\r\n              onChangeText={(location) => setLocation(location)}\r\n            />\r\n            <TextInput\r\n              placeholder=\"Price*\"\r\n              style={styles.input}\r\n              onChangeText={(price) => setPrice(price)}\r\n            />\r\n\r\n            <TouchableOpacity\r\n              style={{\r\n                backgroundColor: \"#6F9E4C\",\r\n                padding: 10,\r\n                marginTop: 10,\r\n                marginBottom: 100,\r\n                alignSelf: \"center\",\r\n                width: \"70%\",\r\n                borderRadius: 5,\r\n              }}\r\n              onPress={upload_post}\r\n            >\r\n              <Text\r\n                style={{ color: \"#fff\", alignSelf: \"center\", fontSize: 16 }}\r\n              >\r\n                Upload Post\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </ScrollView>\r\n    \r\n  );\r\n};\r\n\r\nexport default PostScreen;\r\nconst styles = StyleSheet.create({\r\n  MainContainer: {\r\n    flex: 1,\r\n    marginTop: StatusBar.currentHeight,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n\r\n  input: {\r\n    height: 50,\r\n    margin: 10,\r\n    width: \"95%\",\r\n    padding: 10,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    color: \"#252222\",\r\n    fontSize: 15,\r\n  },\r\n  searchSection: {\r\n    alignItems: \"flex-end\",\r\n    width: \"95%\",\r\n    margin: 10,\r\n    height: 50,\r\n    borderWidth: 0,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"lightgrey\",\r\n    //borderRadius:5,\r\n    //shadowColor: \"#000\",\r\n    /*shadowOffset: {\r\n           width: 0,\r\n         height: 3,\r\n      },\r\n      shadowOpacity: 0.27,\r\n      shadowRadius: 4.65,\r\n  \r\n      elevation: 6,*/\r\n  },\r\n  searchIcon: {\r\n    padding: 10,\r\n    position: \"absolute\",\r\n    left: 0,\r\n    color: \"#a0a1a1\",\r\n    margin: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}