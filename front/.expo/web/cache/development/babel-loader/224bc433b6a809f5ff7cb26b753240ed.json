{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component, useContext, useState } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { CommonActions } from '@react-navigation/native';\nimport { ScreenStackHeaderRightView } from \"react-native-screens\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport { UserContext } from \"../context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login_component = function Login_component(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      registerShow = _useState2[0],\n      setRegisterShow = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      UserName = _useState4[0],\n      setUserName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      UserName_reg = _useState6[0],\n      setUserName_reg = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      UserEmail = _useState8[0],\n      setUserEmail = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      UserPassword = _useState10[0],\n      setUserPassword = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      UserPassword_reg = _useState12[0],\n      setUserPassword_reg = _useState12[1];\n\n  var openLogin = function openLogin() {\n    setRegisterShow(false);\n  };\n\n  var openRegister = function openRegister() {\n    setRegisterShow(true);\n  };\n\n  var UserLoginFunction = function UserLoginFunction(_ref2) {\n    var UserName = _ref2.UserName,\n        UserPassword = _ref2.UserPassword;\n    fetch('https://funzasoft.grahopesolutions.com/jengo/user_login.php', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: UserName,\n        password: UserPassword\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      if (responseJson.response_type === \"error\") {\n        alert(responseJson.msg);\n      } else {\n        var user_name_returned = responseJson.user_name;\n        var user_id_returned = responseJson.user_id;\n        dispatch({\n          type: \"LOGIN\",\n          payload: {\n            user_id: user_id_returned\n          }\n        });\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  var UserRegistrationFunction = function UserRegistrationFunction() {\n    fetch('https://funzasoft.grahopesolutions.com/jengo/user_registration.php', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: UserName_reg,\n        email: UserEmail,\n        password: UserPassword_reg\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      var user_name_returned_reg = responseJson.user_name;\n      var user_id_returned_reg = responseJson.user_id;\n\n      if (responseJson.msg_type === \"error\") {\n        alert(responseJson.msg);\n      } else {\n        dispatch({\n          type: \"LOGIN\",\n          payload: {\n            user_id: user_id_returned_reg\n          }\n        });\n      }\n    }).catch(function (error) {\n      Alert(error);\n    });\n  };\n\n  return _jsx(ScrollView, {\n    style: styles.MainContainer,\n    children: registerShow === true ? _jsxs(View, {\n      children: [_jsxs(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContent: 'space-around',\n          alignItems: 'baseline',\n          margin: 20\n        },\n        children: [_jsx(View, {\n          style: {\n            width: '20%',\n            justifyContent: 'flex-start'\n          },\n          children: _jsx(TouchableWithoutFeedback, {\n            onPress: function onPress() {\n              return navigation.goBack();\n            },\n            children: _jsx(Ionicons, {\n              name: \"arrow-back\",\n              size: 25\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            width: 'auto'\n          },\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return openLogin();\n            },\n            children: _jsx(Text, {\n              style: {\n                color: registerShow ? '#b1b1b3' : '#000',\n                fontSize: 20,\n                fontWeight: '600'\n              },\n              children: \"LOGIN\"\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            width: 'auto'\n          },\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return openRegister();\n            },\n            children: _jsx(Text, {\n              style: {\n                color: registerShow ? '#000' : '#b1b1b3',\n                fontSize: 20,\n                borderBottomWidth: 2,\n                borderBottomColor: '#ff8a00',\n                fontWeight: '600'\n              },\n              children: \"REGISTER\"\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            width: '20%'\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.searchSection,\n        children: [_jsx(Ionicons, {\n          style: styles.searchIcon,\n          name: \"person\",\n          size: 25,\n          color: \"#000\"\n        }), _jsx(TextInput, {\n          placeholder: \"Enter User Name\",\n          onChangeText: function onChangeText(UserName_reg) {\n            return setUserName_reg(UserName_reg);\n          },\n          underlineColorAndroid: \"transparent\",\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.searchSection,\n        children: [_jsx(Ionicons, {\n          style: styles.searchIcon,\n          name: \"mail\",\n          size: 25,\n          color: \"#000\"\n        }), _jsx(TextInput, {\n          placeholder: \"Enter User Email\",\n          onChangeText: function onChangeText(UserEmail) {\n            return setUserEmail(UserEmail);\n          },\n          underlineColorAndroid: \"transparent\",\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.searchSection,\n        children: [_jsx(Ionicons, {\n          style: styles.searchIcon,\n          name: \"key\",\n          size: 25,\n          color: \"#000\"\n        }), _jsx(TextInput, {\n          secureTextEntry: true,\n          placeholder: \"Enter User Password\",\n          onChangeText: function onChangeText(UserPassword_reg) {\n            return setUserPassword_reg(UserPassword_reg);\n          },\n          underlineColorAndroid: \"transparent\",\n          style: styles.input,\n          secureTextEntry: true\n        })]\n      }), _jsx(View, {\n        style: {\n          marginTop: 20,\n          marginRight: 10,\n          marginLeft: 10\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return UserRegistrationFunction();\n          },\n          style: {\n            width: '100%',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: '#ff8a00',\n            padding: 10,\n            borderRadius: 5\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 17,\n              fontWeight: 'bold',\n              color: '#fff'\n            },\n            children: \"Create Account\"\n          })\n        })\n      })]\n    }) : _jsxs(View, {\n      children: [_jsxs(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContent: 'space-around',\n          alignItems: 'baseline',\n          margin: 20\n        },\n        children: [_jsx(View, {\n          style: {\n            width: '20%',\n            justifyContent: 'flex-start'\n          },\n          children: _jsx(TouchableWithoutFeedback, {\n            onPress: function onPress() {\n              return navigation.goBack();\n            },\n            children: _jsx(Ionicons, {\n              name: \"arrow-back\",\n              size: 25\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            width: 'auto'\n          },\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return openLogin();\n            },\n            children: _jsx(Text, {\n              style: {\n                color: state.registerShow ? '#b1b1b3' : '#000',\n                fontSize: 20,\n                fontWeight: '600',\n                borderBottomWidth: 2,\n                borderBottomColor: '#ff8a00'\n              },\n              children: \"LOGIN\"\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            width: 'auto'\n          },\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return openRegister();\n            },\n            children: _jsx(Text, {\n              style: {\n                color: state.registerShow ? '#000' : '#b1b1b3',\n                fontSize: 20,\n                fontWeight: '600'\n              },\n              children: \"REGISTER\"\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            width: '20%'\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.searchSection,\n        children: [_jsx(Ionicons, {\n          style: styles.searchIcon,\n          name: \"person\",\n          size: 25,\n          color: \"#000\"\n        }), _jsx(TextInput, {\n          placeholder: \"Enter User Name\",\n          onChangeText: function onChangeText(UserName) {\n            return setUserName(UserName);\n          },\n          underlineColorAndroid: \"transparent\",\n          style: styles.input\n        })]\n      }), _jsxs(View, {\n        style: styles.searchSection,\n        children: [_jsx(Ionicons, {\n          style: styles.searchIcon,\n          name: \"key\",\n          size: 25,\n          color: \"#000\"\n        }), _jsx(TextInput, {\n          secureTextEntry: true,\n          placeholder: \"Enter User Password\",\n          onChangeText: function onChangeText(UserPassword) {\n            return setUserPassword(UserPassword);\n          },\n          underlineColorAndroid: \"transparent\",\n          style: styles.input,\n          secureTextEntry: true\n        })]\n      }), _jsx(View, {\n        style: {\n          marginTop: 20,\n          marginRight: 10,\n          marginLeft: 10\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return UserLoginFunction({\n              UserName: UserName,\n              UserPassword: UserPassword\n            });\n          },\n          style: {\n            width: '100%',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: '#ff8a00',\n            padding: 10,\n            borderRadius: 5\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 17,\n              fontWeight: 'bold',\n              color: '#fff'\n            },\n            children: \"Login\"\n          })\n        })\n      })]\n    })\n  });\n};\n\nexport default Login_component;\nvar styles = StyleSheet.create({\n  MainContainer: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n    backgroundColor: '#fff'\n  },\n  input: {\n    height: 50,\n    margin: 10,\n    width: '85%',\n    paddingLeft: 10,\n    borderRadius: 5,\n    borderWidth: 0,\n    borderColor: '#ccc',\n    color: '#000',\n    fontSize: 15\n  },\n  searchSection: {\n    alignItems: 'flex-end',\n    width: '95%',\n    margin: 10,\n    height: 50,\n    borderWidth: 0,\n    borderBottomWidth: 1,\n    borderBottomColor: 'lightgrey'\n  },\n  searchIcon: {\n    padding: 10,\n    position: 'absolute',\n    left: 0,\n    color: '#a0a1a1',\n    margin: 10\n  }\n});","map":{"version":3,"sources":["C:/jengo/src/screens/Login_component.js"],"names":["React","Component","useContext","useState","Ionicons","NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","CommonActions","ScreenStackHeaderRightView","SafeAreaView","TouchableWithoutFeedback","UserContext","Login_component","navigation","state","dispatch","registerShow","setRegisterShow","UserName","setUserName","UserName_reg","setUserName_reg","UserEmail","setUserEmail","UserPassword","setUserPassword","UserPassword_reg","setUserPassword_reg","openLogin","openRegister","UserLoginFunction","fetch","method","headers","body","JSON","stringify","name","password","then","response","json","responseJson","response_type","alert","msg","user_name_returned","user_name","user_id_returned","user_id","type","payload","catch","error","UserRegistrationFunction","email","user_name_returned_reg","user_id_returned_reg","msg_type","Alert","styles","MainContainer","flex","flexDirection","justifyContent","alignItems","margin","width","goBack","color","fontSize","fontWeight","borderBottomWidth","borderBottomColor","searchSection","searchIcon","input","marginTop","marginRight","marginLeft","backgroundColor","padding","borderRadius","StyleSheet","create","StatusBar","currentHeight","height","paddingLeft","borderWidth","borderColor","position","left"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAsCC,QAAtC,QAAqD,OAArD;;;;;;;;;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAGA,SAASC,0BAAT,QAA2C,sBAA3C;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,wBAAT,QAAyC,8BAAzC;AAEA,SAASC,WAAT;;;;AAKA,IAAMC,eAAe,GAAC,SAAhBA,eAAgB,OACtB;AAAA,MADwBC,UACxB,QADwBA,UACxB;;AAEQ,oBAAsBZ,UAAU,CAACU,WAAD,CAAhC;AAAA,MAAMG,KAAN,eAAMA,KAAN;AAAA,MAAYC,QAAZ,eAAYA,QAAZ;;AAIA,kBAAqCb,QAAQ,CAAC,KAAD,CAA7C;AAAA;AAAA,MAAOc,YAAP;AAAA,MAAoBC,eAApB;;AACA,mBAA6Bf,QAAQ,CAAC,EAAD,CAArC;AAAA;AAAA,MAAOgB,QAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAAqCjB,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOkB,YAAP;AAAA,MAAoBC,eAApB;;AACA,mBAA+BnB,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOoB,SAAP;AAAA,MAAiBC,YAAjB;;AACA,mBAAqCrB,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOsB,YAAP;AAAA,MAAoBC,eAApB;;AACA,oBAA6CvB,QAAQ,CAAC,EAAD,CAArD;AAAA;AAAA,MAAOwB,gBAAP;AAAA,MAAwBC,mBAAxB;;AAOD,MAAMC,SAAS,GAAE,SAAXA,SAAW,GACjB;AACGX,IAAAA,eAAe,CAAC,KAAD,CAAf;AACF,GAHD;;AAIA,MAAMY,YAAY,GAAE,SAAdA,YAAc,GAAI;AACpBZ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAFD;;AAID,MAAMa,iBAAiB,GAAG,SAApBA,iBAAoB,QACzB;AAAA,QAD2BZ,QAC3B,SAD2BA,QAC3B;AAAA,QADsCM,YACtC,SADsCA,YACtC;AAYEO,IAAAA,KAAK,CAAC,6DAAD,EAAgE;AACnEC,MAAAA,MAAM,EAAE,MAD2D;AAEnEC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAF0D;AAMnEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAEnBC,QAAAA,IAAI,EAAEnB,QAFa;AAGtBoB,QAAAA,QAAQ,EAAEd;AAHY,OAAf;AAN6D,KAAhE,CAAL,CAaGe,IAbH,CAaQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAbR,EAcOF,IAdP,CAcY,UAACG,YAAD,EAAkB;AAKtB,UAAGA,YAAY,CAACC,aAAb,KAA+B,OAAlC,EACA;AACEC,QAAAA,KAAK,CAACF,YAAY,CAACG,GAAd,CAAL;AACD,OAHD,MAKA;AAEE,YAAMC,kBAAkB,GAAEJ,YAAY,CAACK,SAAvC;AACA,YAAMC,gBAAgB,GAAEN,YAAY,CAACO,OAArC;AAKFlC,QAAAA,QAAQ,CAAC;AAACmC,UAAAA,IAAI,EAAC,OAAN;AAAcC,UAAAA,OAAO,EAAC;AAACF,YAAAA,OAAO,EAACD;AAAT;AAAtB,SAAD,CAAR;AAEC;AAGF,KArCP,EAqCSI,KArCT,CAqCe,UAACC,KAAD,EACT;AACCT,MAAAA,KAAK,CAACS,KAAD,CAAL;AACA,KAxCP;AA2CG,GAxDN;;AA0DA,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAK;AAGrCvB,IAAAA,KAAK,CAAC,oEAAD,EACL;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACN;AACEC,QAAAA,IAAI,EAAEjB,YADR;AAEEmC,QAAAA,KAAK,EAAEjC,SAFT;AAGEgB,QAAAA,QAAQ,EAAEZ;AAHZ,OADM;AANR,KADK,CAAL,CAeEa,IAfF,CAeO,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAfP,EAgBCF,IAhBD,CAgBM,UAACG,YAAD,EAAiB;AACpB,UAAMc,sBAAsB,GAAEd,YAAY,CAACK,SAA3C;AACA,UAAMU,oBAAoB,GAAEf,YAAY,CAACO,OAAzC;;AAEA,UAAGP,YAAY,CAACgB,QAAb,KAA0B,OAA7B,EACA;AACGd,QAAAA,KAAK,CAACF,YAAY,CAACG,GAAd,CAAL;AACF,OAHD,MAKA;AACE9B,QAAAA,QAAQ,CAAC;AAACmC,UAAAA,IAAI,EAAC,OAAN;AAAcC,UAAAA,OAAO,EAAC;AAACF,YAAAA,OAAO,EAACQ;AAAT;AAAtB,SAAD,CAAR;AACD;AACH,KA5BD,EA6BCL,KA7BD,CA6BO,UAACC,KAAD,EAAS;AACZM,MAAAA,KAAK,CAACN,KAAD,CAAL;AACH,KA/BD;AAiCA,GApCD;;AAwCE,SAEI,KAAC,UAAD;AAAY,IAAA,KAAK,EAAEO,MAAM,CAACC,aAA1B;AAAA,cAGO7C,YAAY,KAAK,IAAjB,GACH,MAAC,IAAD;AAAA,iBAEI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC8C,UAAAA,IAAI,EAAC,CAAN;AAASC,UAAAA,aAAa,EAAC,KAAvB;AAA6BC,UAAAA,cAAc,EAAC,cAA5C;AAA2DC,UAAAA,UAAU,EAAC,UAAtE;AAAkFC,UAAAA,MAAM,EAAC;AAAzF,SAAb;AAAA,mBACG,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC,KAAP;AAAcH,YAAAA,cAAc,EAAC;AAA7B,WAAb;AAAA,oBACA,KAAC,wBAAD;AAA0B,YAAA,OAAO,EAAE;AAAA,qBAAKnD,UAAU,CAACuD,MAAX,EAAL;AAAA,aAAnC;AAAA,sBACG,KAAC,QAAD;AAAU,cAAA,IAAI,EAAC,YAAf;AAA4B,cAAA,IAAI,EAAE;AAAlC;AADH;AADA,UADH,EAMA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACD,YAAAA,KAAK,EAAC;AAAP,WAAb;AAAA,oBAEA,KAAC,gBAAD;AAAkB,YAAA,OAAO,EAAG;AAAA,qBAAKvC,SAAS,EAAd;AAAA,aAA5B;AAAA,sBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AACVyC,gBAAAA,KAAK,EAACrD,YAAY,GAAG,SAAH,GAAe,MADvB;AAEVsD,gBAAAA,QAAQ,EAAC,EAFC;AAGVC,gBAAAA,UAAU,EAAC;AAHD,eAAb;AAAA;AAAA;AADJ;AAFA,UANA,EAkBA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACJ,YAAAA,KAAK,EAAC;AAAP,WAAb;AAAA,oBAEA,KAAC,gBAAD;AAAkB,YAAA,OAAO,EAAG;AAAA,qBAAKtC,YAAY,EAAjB;AAAA,aAA5B;AAAA,sBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AACVwC,gBAAAA,KAAK,EAACrD,YAAY,GAAG,MAAH,GAAY,SADpB;AAEVsD,gBAAAA,QAAQ,EAAC,EAFC;AAGVE,gBAAAA,iBAAiB,EAAC,CAHR;AAIVC,gBAAAA,iBAAiB,EAAC,SAJR;AAKVF,gBAAAA,UAAU,EAAC;AALD,eAAb;AAAA;AAAA;AADJ;AAFA,UAlBA,EAiCA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACJ,YAAAA,KAAK,EAAC;AAAP;AAAb,UAjCA;AAAA,QAFJ,EAsCI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACc,aAApB;AAAA,mBACA,KAAC,QAAD;AAAU,UAAA,KAAK,EAAEd,MAAM,CAACe,UAAxB;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAkD,UAAA,IAAI,EAAE,EAAxD;AAA4D,UAAA,KAAK,EAAC;AAAlE,UADA,EAEA,KAAC,SAAD;AAGE,UAAA,WAAW,EAAC,iBAHd;AAKE,UAAA,YAAY,EAAE,sBAAAvD,YAAY;AAAA,mBAAIC,eAAe,CAACD,YAAD,CAAnB;AAAA,WAL5B;AAQE,UAAA,qBAAqB,EAAC,aARxB;AAUE,UAAA,KAAK,EAAEwC,MAAM,CAACgB;AAVhB,UAFA;AAAA,QAtCJ,EAsDI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,MAAM,CAACc,aAApB;AAAA,mBACC,KAAC,QAAD;AAAU,UAAA,KAAK,EAAEd,MAAM,CAACe,UAAxB;AAAoC,UAAA,IAAI,EAAC,MAAzC;AAAgD,UAAA,IAAI,EAAE,EAAtD;AAA0D,UAAA,KAAK,EAAC;AAAhE,UADD,EAEA,KAAC,SAAD;AAGE,UAAA,WAAW,EAAC,kBAHd;AAKE,UAAA,YAAY,EAAE,sBAAArD,SAAS;AAAA,mBAAGC,YAAY,CAACD,SAAD,CAAf;AAAA,WALzB;AAQE,UAAA,qBAAqB,EAAC,aARxB;AAUE,UAAA,KAAK,EAAEsC,MAAM,CAACgB;AAVhB,UAFA;AAAA,QAtDJ,EAqEI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,MAAM,CAACc,aAApB;AAAA,mBACA,KAAC,QAAD;AAAU,UAAA,KAAK,EAAEd,MAAM,CAACe,UAAxB;AAAoC,UAAA,IAAI,EAAC,KAAzC;AAA+C,UAAA,IAAI,EAAE,EAArD;AAAyD,UAAA,KAAK,EAAC;AAA/D,UADA,EAEA,KAAC,SAAD;AACE,UAAA,eAAe,EAAE,IADnB;AAGE,UAAA,WAAW,EAAC,qBAHd;AAKE,UAAA,YAAY,EAAE,sBAAAjD,gBAAgB;AAAA,mBAAIC,mBAAmB,CAACD,gBAAD,CAAvB;AAAA,WALhC;AAQE,UAAA,qBAAqB,EAAC,aARxB;AAUE,UAAA,KAAK,EAAEkC,MAAM,CAACgB,KAVhB;AAYE,UAAA,eAAe,EAAE;AAZnB,UAFA;AAAA,QArEJ,EAsFI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC,EAAX;AAAeC,UAAAA,WAAW,EAAE,EAA5B;AAAgCC,UAAAA,UAAU,EAAC;AAA3C,SAAb;AAAA,kBACI,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAIzB,wBAAwB,EAA5B;AAAA,WAA3B;AACA,UAAA,KAAK,EAAE;AAACa,YAAAA,KAAK,EAAC,MAAP;AAAcH,YAAAA,cAAc,EAAC,QAA7B;AAAsCC,YAAAA,UAAU,EAAC,QAAjD;AAA0De,YAAAA,eAAe,EAAC,SAA1E;AAAqFC,YAAAA,OAAO,EAAE,EAA9F;AAAkGC,YAAAA,YAAY,EAAC;AAA/G,WADP;AAAA,oBAEJ,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACZ,cAAAA,QAAQ,EAAC,EAAV;AAAcC,cAAAA,UAAU,EAAC,MAAzB;AAAiCF,cAAAA,KAAK,EAAC;AAAvC,aAAb;AAAA;AAAA;AAFI;AADJ,QAtFJ;AAAA,MADG,GA8FA,MAAC,IAAD;AAAA,iBAEF,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACP,UAAAA,IAAI,EAAC,CAAN;AAASC,UAAAA,aAAa,EAAC,KAAvB;AAA6BC,UAAAA,cAAc,EAAC,cAA5C;AAA2DC,UAAAA,UAAU,EAAC,UAAtE;AAAkFC,UAAAA,MAAM,EAAC;AAAzF,SAAb;AAAA,mBAEA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC,KAAP;AAAcH,YAAAA,cAAc,EAAC;AAA7B,WAAb;AAAA,oBACG,KAAC,wBAAD;AAA0B,YAAA,OAAO,EAAE;AAAA,qBAAKnD,UAAU,CAACuD,MAAX,EAAL;AAAA,aAAnC;AAAA,sBACG,KAAC,QAAD;AAAU,cAAA,IAAI,EAAC,YAAf;AAA4B,cAAA,IAAI,EAAE;AAAlC;AADH;AADH,UAFA,EAOA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACD,YAAAA,KAAK,EAAC;AAAP,WAAb;AAAA,oBACI,KAAC,gBAAD;AAAkB,YAAA,OAAO,EAAG;AAAA,qBAAKvC,SAAS,EAAd;AAAA,aAA5B;AAAA,sBACA,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AACVyC,gBAAAA,KAAK,EAACvD,KAAK,CAACE,YAAN,GAAqB,SAArB,GAAiC,MAD7B;AAEVsD,gBAAAA,QAAQ,EAAC,EAFC;AAGVC,gBAAAA,UAAU,EAAC,KAHD;AAIVC,gBAAAA,iBAAiB,EAAC,CAJR;AAKVC,gBAAAA,iBAAiB,EAAC;AALR,eAAb;AAAA;AAAA;AADA;AADJ,UAPA,EAuBA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACN,YAAAA,KAAK,EAAC;AAAP,WAAb;AAAA,oBACA,KAAC,gBAAD;AAAkB,YAAA,OAAO,EAAG;AAAA,qBAAKtC,YAAY,EAAjB;AAAA,aAA5B;AAAA,sBACI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AACVwC,gBAAAA,KAAK,EAACvD,KAAK,CAACE,YAAN,GAAqB,MAArB,GAA8B,SAD1B;AAEVsD,gBAAAA,QAAQ,EAAC,EAFC;AAGVC,gBAAAA,UAAU,EAAC;AAHD,eAAb;AAAA;AAAA;AADJ;AADA,UAvBA,EAiCA,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACJ,YAAAA,KAAK,EAAC;AAAP;AAAb,UAjCA;AAAA,QAFE,EAwCF,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACc,aAApB;AAAA,mBACG,KAAC,QAAD;AAAU,UAAA,KAAK,EAAEd,MAAM,CAACe,UAAxB;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAkD,UAAA,IAAI,EAAE,EAAxD;AAA4D,UAAA,KAAK,EAAC;AAAlE,UADH,EAEG,KAAC,SAAD;AAGE,UAAA,WAAW,EAAC,iBAHd;AAKE,UAAA,YAAY,EAAE,sBAAAzD,QAAQ;AAAA,mBAAIC,WAAW,CAACD,QAAD,CAAf;AAAA,WALxB;AAQE,UAAA,qBAAqB,EAAC,aARxB;AAUE,UAAA,KAAK,EAAE0C,MAAM,CAACgB;AAVhB,UAFH;AAAA,QAxCE,EAuDF,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,MAAM,CAACc,aAApB;AAAA,mBACA,KAAC,QAAD;AAAU,UAAA,KAAK,EAAEd,MAAM,CAACe,UAAxB;AAAoC,UAAA,IAAI,EAAC,KAAzC;AAA+C,UAAA,IAAI,EAAE,EAArD;AAAyD,UAAA,KAAK,EAAC;AAA/D,UADA,EAEA,KAAC,SAAD;AACE,UAAA,eAAe,EAAE,IADnB;AAGE,UAAA,WAAW,EAAC,qBAHd;AAKE,UAAA,YAAY,EAAE,sBAAAnD,YAAY;AAAA,mBAAIC,eAAe,CAACD,YAAD,CAAnB;AAAA,WAL5B;AAQE,UAAA,qBAAqB,EAAC,aARxB;AAUE,UAAA,KAAK,EAAEoC,MAAM,CAACgB,KAVhB;AAYE,UAAA,eAAe,EAAE;AAZnB,UAFA;AAAA,QAvDE,EAwEF,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC,EAAX;AAAeC,UAAAA,WAAW,EAAE,EAA5B;AAAgCC,UAAAA,UAAU,EAAC;AAA3C,SAAb;AAAA,kBACO,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAIjD,iBAAiB,CAAC;AAACZ,cAAAA,QAAQ,EAARA,QAAD;AAAUM,cAAAA,YAAY,EAAZA;AAAV,aAAD,CAArB;AAAA,WAA3B;AACA,UAAA,KAAK,EAAE;AAAC2C,YAAAA,KAAK,EAAC,MAAP;AAAcH,YAAAA,cAAc,EAAC,QAA7B;AAAsCC,YAAAA,UAAU,EAAC,QAAjD;AAA0De,YAAAA,eAAe,EAAC,SAA1E;AAAqFC,YAAAA,OAAO,EAAE,EAA9F;AAAkGC,YAAAA,YAAY,EAAC;AAA/G,WADP;AAAA,oBAEJ,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACZ,cAAAA,QAAQ,EAAC,EAAV;AAAcC,cAAAA,UAAU,EAAC,MAAzB;AAAiCF,cAAAA,KAAK,EAAC;AAAvC,aAAb;AAAA;AAAA;AAFI;AADP,QAxEE;AAAA;AAjGP,IAFJ;AA+LD,CA5TP;;AA8TA,eAAezD,eAAf;AAGA,IAAMgD,MAAM,GAAGuB,UAAU,CAACC,MAAX,CAAkB;AAE7BvB,EAAAA,aAAa,EAAE;AAGfC,IAAAA,IAAI,EAAC,CAHU;AAIfe,IAAAA,SAAS,EAACQ,SAAS,CAACC,aAJL;AAKfN,IAAAA,eAAe,EAAC;AALD,GAFc;AAU7BJ,EAAAA,KAAK,EAAE;AAEHW,IAAAA,MAAM,EAAE,EAFL;AAGHrB,IAAAA,MAAM,EAAE,EAHL;AAIHC,IAAAA,KAAK,EAAC,KAJH;AAKHqB,IAAAA,WAAW,EAAC,EALT;AAMHN,IAAAA,YAAY,EAAC,CANV;AAOHO,IAAAA,WAAW,EAAC,CAPT;AAQHC,IAAAA,WAAW,EAAC,MART;AASHrB,IAAAA,KAAK,EAAC,MATH;AAUHC,IAAAA,QAAQ,EAAC;AAVN,GAVsB;AAyB7BI,EAAAA,aAAa,EAAE;AACZT,IAAAA,UAAU,EAAC,UADC;AAEZE,IAAAA,KAAK,EAAC,KAFM;AAGXD,IAAAA,MAAM,EAAC,EAHI;AAIXqB,IAAAA,MAAM,EAAC,EAJI;AAKXE,IAAAA,WAAW,EAAC,CALD;AAMXjB,IAAAA,iBAAiB,EAAC,CANP;AAOXC,IAAAA,iBAAiB,EAAC;AAPP,GAzBc;AA4C1BE,EAAAA,UAAU,EAAE;AACXM,IAAAA,OAAO,EAAE,EADE;AAEXU,IAAAA,QAAQ,EAAE,UAFC;AAGXC,IAAAA,IAAI,EAAC,CAHM;AAIXvB,IAAAA,KAAK,EAAC,SAJK;AAKXH,IAAAA,MAAM,EAAC;AALI;AA5Cc,CAAlB,CAAf","sourcesContent":["import React, { Component, useContext,useState} from 'react';\r\nimport { AppRegistry,StyleSheet,Alert,Button,TextInput,Text, View,Image,TouchableOpacity, StatusBar, ScrollView } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\";\r\n\r\nimport { CommonActions } from '@react-navigation/native';\r\n\r\n\r\nimport { ScreenStackHeaderRightView } from \"react-native-screens\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\r\n\r\nimport { UserContext } from '../context/UserContext';\r\n\r\n\r\n      \r\n  \r\nconst Login_component=({navigation})=>\r\n{\r\n        \r\n        const{state,dispatch}=useContext(UserContext);\r\n        \r\n        \r\n        //const {route}=props.route;\r\n        const [registerShow,setRegisterShow]=useState(false);\r\n        const [UserName,setUserName]=useState('');\r\n        const [UserName_reg,setUserName_reg]=useState('');\r\n        const [UserEmail,setUserEmail]=useState('');\r\n        const [UserPassword,setUserPassword]=useState('');\r\n        const [UserPassword_reg,setUserPassword_reg]=useState('');\r\n        //const [user_id,setUserId]=useState();\r\n       \r\n         \r\n\r\n       \r\n\r\n       const openLogin= ()=>\r\n       {\r\n          setRegisterShow(false)\r\n       }\r\n       const openRegister= ()=>{\r\n           setRegisterShow(true)\r\n       }\r\n\r\n      const UserLoginFunction = ({UserName , UserPassword}) =>\r\n       {\r\n\r\n          //alert(UserName);\r\n          //alert(UserPassword);\r\n         \r\n          //const { UserName , UserPassword}  = state;\r\n          \r\n      \r\n          \r\n          //navigation.navigate(\"Account\",{user_id:1,login_status:true})\r\n          \r\n          \r\n         fetch('https://funzasoft.grahopesolutions.com/jengo/user_login.php', {\r\n           method: 'POST',\r\n           headers: {\r\n             'Accept': 'application/json',\r\n             'Content-Type': 'application/json',\r\n           },\r\n           body: JSON.stringify({\r\n          \r\n             name: UserName,\r\n          password: UserPassword,\r\n          \r\n           })\r\n          \r\n         }).then((response) => response.json())\r\n               .then((responseJson) => {\r\n          \r\n         // Showing response message coming from server after inserting records.\r\n         //alert(\"niaje\");\r\n                 \r\n                 if(responseJson.response_type === \"error\")\r\n                 {\r\n                   alert(responseJson.msg);\r\n                 }\r\n                 else\r\n                 {\r\n                   //alert(responseJson.user_name);\r\n                   const user_name_returned=(responseJson.user_name);\r\n                   const user_id_returned=(responseJson.user_id);\r\n                  //alert(state.user_id=responseJson.user_id);\r\n                 //alert(state.user_name=responseJson.user_name);\r\n                 //alert(user_id_returned); return null\r\n                 //alert(\"niaje\");\r\n                 dispatch({type:\"LOGIN\",payload:{user_id:user_id_returned}})\r\n                  //navigation.navigate(\"Account\",{user_id:state.user_id,login_status:true});\r\n                 }\r\n                  \r\n          \r\n               }).catch((error) => \r\n               {\r\n                alert(error);\r\n               });\r\n          \r\n          \r\n           }\r\n\r\n      const UserRegistrationFunction = ()=> {\r\n          //alert(UserName_reg)\r\n           \r\n       fetch('https://funzasoft.grahopesolutions.com/jengo/user_registration.php', \r\n       {\r\n         method: 'POST',\r\n         headers: {\r\n             'Accept': 'application/json',\r\n             'Content-Type': 'application/json',\r\n         },\r\n         body: JSON.stringify(\r\n         {\r\n           name: UserName_reg,\r\n           email: UserEmail,\r\n           password: UserPassword_reg,\r\n         })\r\n       }\r\n       \r\n       ).then((response) => response.json())\r\n       .then((responseJson)=> {\r\n          const user_name_returned_reg=(responseJson.user_name);\r\n          const user_id_returned_reg=(responseJson.user_id);\r\n          \r\n          if(responseJson.msg_type === \"error\")\r\n          {\r\n             alert(responseJson.msg);\r\n          }\r\n          else\r\n          {\r\n            dispatch({type:\"LOGIN\",payload:{user_id:user_id_returned_reg}})\r\n          }\r\n       })\r\n       .catch((error)=>{\r\n           Alert(error);\r\n       });\r\n        \r\n      }\r\n      \r\n \r\n\r\n        return (\r\n   \r\n            <ScrollView style={styles.MainContainer}>\r\n               \r\n                \r\n                 { registerShow === true ?\r\n                <View>\r\n                   \r\n                    <View style={{flex:1, flexDirection:\"row\",justifyContent:'space-around',alignItems:'baseline', margin:20}}>\r\n                       <View style={{width:'20%', justifyContent:'flex-start'}}>\r\n                       <TouchableWithoutFeedback onPress={()=> navigation.goBack()}>\r\n                          <Ionicons name=\"arrow-back\" size={25}/>\r\n                       </TouchableWithoutFeedback>\r\n                    </View>\r\n                    <View style={{width:'auto'}}>\r\n                    \r\n                    <TouchableOpacity onPress={ ()=> openLogin() }>\r\n                        <Text style={{\r\n                           color:registerShow ? '#b1b1b3' : '#000',\r\n                           fontSize:20,\r\n                           fontWeight:'600'\r\n                           \r\n\r\n                        }}>LOGIN</Text>\r\n                    </TouchableOpacity>\r\n                    </View>\r\n                    <View style={{width:'auto'}}>\r\n                   \r\n                    <TouchableOpacity onPress={ ()=> openRegister()}>\r\n                        <Text style={{\r\n                           color:registerShow ? '#000' : '#b1b1b3',\r\n                           fontSize:20,\r\n                           borderBottomWidth:2,\r\n                           borderBottomColor:'#ff8a00',\r\n                           fontWeight:'600',\r\n                           //textDecorationStyle:'solid',\r\n                           //textDecorationColor:'ff8a00'\r\n\r\n                        }}>REGISTER</Text>\r\n                    </TouchableOpacity>\r\n                    </View>\r\n                    <View style={{width:'20%'}}></View>\r\n                    </View>\r\n                   \r\n                    <View style={styles.searchSection}>\r\n                    <Ionicons style={styles.searchIcon} name=\"person\" size={25} color=\"#000\"/>\r\n                    <TextInput\r\n                      \r\n                      // Adding hint in Text Input using Place holder.\r\n                      placeholder=\"Enter User Name\"\r\n             \r\n                      onChangeText={UserName_reg => setUserName_reg(UserName_reg)}\r\n             \r\n                      // Making the Under line Transparent.\r\n                      underlineColorAndroid='transparent'\r\n             \r\n                      style={styles.input}\r\n                    />\r\n                   \r\n                    </View>\r\n                    <View style={styles.searchSection}>\r\n                     <Ionicons style={styles.searchIcon} name=\"mail\" size={25} color=\"#000\"/>\r\n                    <TextInput\r\n                      \r\n                      // Adding hint in Text Input using Place holder.\r\n                      placeholder=\"Enter User Email\"\r\n             \r\n                      onChangeText={UserEmail =>setUserEmail(UserEmail)}\r\n             \r\n                      // Making the Under line Transparent.\r\n                      underlineColorAndroid='transparent'\r\n             \r\n                      style={styles.input}\r\n                    />\r\n                    </View>\r\n                    <View style={styles.searchSection}>\r\n                    <Ionicons style={styles.searchIcon} name=\"key\" size={25} color=\"#000\"/>\r\n                    <TextInput\r\n                      secureTextEntry={true}\r\n                      // Adding hint in Text Input using Place holder.\r\n                      placeholder=\"Enter User Password\"\r\n             \r\n                      onChangeText={UserPassword_reg => setUserPassword_reg(UserPassword_reg)}\r\n             \r\n                      // Making the Under line Transparent.\r\n                      underlineColorAndroid='transparent'\r\n             \r\n                      style={styles.input}\r\n            \r\n                      secureTextEntry={true}\r\n                    />\r\n                    </View>\r\n                    <View style={{marginTop:20, marginRight: 10, marginLeft:10}}>\r\n                        <TouchableOpacity onPress={()=>UserRegistrationFunction()} \r\n                        style={{width:'100%',justifyContent:'center',alignItems:'center',backgroundColor:'#ff8a00', padding: 10, borderRadius:5}} >\r\n                    <Text style={{fontSize:17, fontWeight:'bold', color:'#fff'}}>Create Account</Text>\r\n                    </TouchableOpacity>\r\n                    </View>\r\n                 </View>\r\n                 : <View>\r\n                \r\n                 <View style={{flex:1, flexDirection:\"row\",justifyContent:'space-around',alignItems:'baseline', margin:20}}>\r\n\r\n                 <View style={{width:'20%', justifyContent:'flex-start'}}>\r\n                    <TouchableWithoutFeedback onPress={()=> navigation.goBack()}>\r\n                       <Ionicons name=\"arrow-back\" size={25}/>\r\n                    </TouchableWithoutFeedback>\r\n                    </View>\r\n                 <View style={{width:'auto'}}>\r\n                     <TouchableOpacity onPress={ ()=> openLogin()}>\r\n                     <Text style={{\r\n                        color:state.registerShow ? '#b1b1b3' : '#000',\r\n                        fontSize:20,\r\n                        fontWeight:'600',\r\n                        borderBottomWidth:2,\r\n                        borderBottomColor:'#ff8a00',\r\n                        \r\n                        \r\n\r\n                     }}>LOGIN\r\n                     </Text>\r\n                     </TouchableOpacity>\r\n                 </View>\r\n                \r\n                 <View style={{width:'auto'}}>\r\n                 <TouchableOpacity onPress={ ()=> openRegister()}>\r\n                     <Text style={{\r\n                        color:state.registerShow ? '#000' : '#b1b1b3',\r\n                        fontSize:20,\r\n                        fontWeight:'600'\r\n\r\n                     }}>REGISTER</Text>\r\n                 </TouchableOpacity>\r\n                 </View>\r\n                 <View style={{width:'20%'}}>\r\n                  \r\n                 </View>\r\n                 \r\n                 </View>\r\n                 <View style={styles.searchSection}>\r\n                    <Ionicons style={styles.searchIcon} name=\"person\" size={25} color=\"#000\"/>\r\n                    <TextInput\r\n                      \r\n                      // Adding hint in Text Input using Place holder.\r\n                      placeholder=\"Enter User Name\"\r\n                      \r\n                      onChangeText={UserName => setUserName(UserName)}\r\n             \r\n                      // Making the Under line Transparent.\r\n                      underlineColorAndroid='transparent'\r\n             \r\n                      style={styles.input}\r\n                    />\r\n                    </View>\r\n                 <View style={styles.searchSection}>\r\n                 <Ionicons style={styles.searchIcon} name=\"key\" size={25} color=\"#000\"/>\r\n                 <TextInput\r\n                   secureTextEntry={true}\r\n                   // Adding hint in Text Input using Place holder.\r\n                   placeholder=\"Enter User Password\"\r\n                   \r\n                   onChangeText={UserPassword => setUserPassword(UserPassword)}\r\n          \r\n                   // Making the Under line Transparent.\r\n                   underlineColorAndroid='transparent'\r\n          \r\n                   style={styles.input}\r\n         \r\n                   secureTextEntry={true}\r\n                 />\r\n                 </View>\r\n                 <View style={{marginTop:20, marginRight: 10, marginLeft:10}}>\r\n                        <TouchableOpacity onPress={()=>UserLoginFunction({UserName,UserPassword})} \r\n                        style={{width:'100%',justifyContent:'center',alignItems:'center',backgroundColor:'#ff8a00', padding: 10, borderRadius:5}} >\r\n                    <Text style={{fontSize:17, fontWeight:'bold', color:'#fff'}}>Login</Text>\r\n                    </TouchableOpacity>\r\n                    </View>\r\n              </View>\r\n                 }\r\n\r\n\r\n      \r\n               \r\n                    \r\n               \r\n                \r\n             \r\n            </ScrollView>\r\n                        \r\n                );\r\n              \r\n      }\r\n \r\nexport default Login_component;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n \r\n    MainContainer :{\r\n     \r\n  \r\n    flex:1,\r\n    marginTop:StatusBar.currentHeight,\r\n    backgroundColor:'#fff'\r\n    },\r\n     \r\n    input: {\r\n        \r\n        height: 50,\r\n        margin: 10,\r\n        width:'85%',\r\n        paddingLeft:10,\r\n        borderRadius:5,\r\n        borderWidth:0,\r\n        borderColor:'#ccc',\r\n        color:'#000',\r\n        fontSize:15,\r\n        \r\n        \r\n        \r\n      },\r\n    searchSection: {\r\n       alignItems:'flex-end',\r\n       width:'95%',\r\n        margin:10,\r\n        height:50,\r\n        borderWidth:0,\r\n        borderBottomWidth:1,\r\n        borderBottomColor:'lightgrey'\r\n        //borderRadius:5,\r\n        //shadowColor: \"#000\",\r\n        /*shadowOffset: {\r\n             width: 0,\r\n           height: 3,\r\n        },\r\n        shadowOpacity: 0.27,\r\n        shadowRadius: 4.65,\r\n    \r\n        elevation: 6,*/\r\n       },\r\n       searchIcon: {\r\n        padding: 10,\r\n        position: 'absolute',\r\n        left:0,\r\n        color:'#a0a1a1',\r\n        margin:10\r\n    },\r\n     \r\n    });\r\n     \r\n   // AppRegistry.registerComponent('LoginScreen', () => LoginScreen);"]},"metadata":{},"sourceType":"module"}